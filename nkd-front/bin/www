#!/usr/bin/env node
var config = require("nconf")
  .argv()
  .env()
  .file({ file: "./config/config.json" });

const local_port = config.get("local_port") || "3001";

var app = require("../app");

app.init(config);

var debug = require("debug")("yelka:server");
var http = require("http");

var server = http.createServer(app);
server.listen(local_port);
server.on("error", onError);
server.on("listening", onListening);

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind =
    typeof local_port === "string"
      ? "Pipe " + local_port
      : "Port " + local_port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}
